{
  "openapi": "3.0.0",
  "paths": {
    "/api/auth/signup": {
      "post": {
        "operationId": "AuthController_signup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Utilisateur créé avec succès",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Email ou username déjà utilisé"
          }
        },
        "summary": "Inscription d'un nouvel utilisateur",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Connexion réussie",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Email ou mot de passe incorrect"
          }
        },
        "summary": "Connexion d'un utilisateur",
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/chat/general": {
      "post": {
        "operationId": "ChatController_sendGeneralMessage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendGeneralMessageDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message envoyé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Envoyer un message dans le chat général",
        "tags": [
          "Chat"
        ]
      },
      "get": {
        "operationId": "ChatController_getGeneralMessages",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Liste des messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageResponseDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Récupérer les messages du chat général",
        "tags": [
          "Chat"
        ]
      }
    },
    "/api/chat/direct": {
      "post": {
        "operationId": "ChatController_sendDirectMessage",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendDirectMessageDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message envoyé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Envoyer un message direct",
        "tags": [
          "Chat"
        ]
      }
    },
    "/api/chat/conversation/{otherUserId}": {
      "get": {
        "operationId": "ChatController_getConversation",
        "parameters": [
          {
            "name": "otherUserId",
            "required": true,
            "in": "path",
            "description": "ID de l'autre utilisateur",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Messages de la conversation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Récupérer une conversation avec un utilisateur",
        "tags": [
          "Chat"
        ]
      }
    },
    "/api/chat/conversations": {
      "get": {
        "operationId": "ChatController_getConversations",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Liste des conversations"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Récupérer toutes les conversations de l'utilisateur",
        "tags": [
          "Chat"
        ]
      }
    },
    "/api/chat/mark-read/{messageId}": {
      "post": {
        "operationId": "ChatController_markAsRead",
        "parameters": [
          {
            "name": "messageId",
            "required": true,
            "in": "path",
            "description": "ID du message",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message marqué comme lu"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Marquer un message comme lu",
        "tags": [
          "Chat"
        ]
      }
    },
    "/api/podcasts": {
      "post": {
        "operationId": "PodcastController_createPodcast",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePodcastDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Podcast créé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PodcastResponseDto"
                }
              }
            }
          },
          "403": {
            "description": "Vous ne pouvez pas publier de podcasts"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Créer un nouveau podcast (publishers uniquement)",
        "tags": [
          "Podcasts"
        ]
      },
      "get": {
        "operationId": "PodcastController_getAllPodcasts",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Liste des podcasts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PodcastResponseDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Récupérer tous les podcasts",
        "tags": [
          "Podcasts"
        ]
      }
    },
    "/api/podcasts/{id}": {
      "get": {
        "operationId": "PodcastController_getPodcastById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID du podcast",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Détails du podcast",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PodcastResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Podcast non trouvé"
          }
        },
        "summary": "Récupérer un podcast par son ID",
        "tags": [
          "Podcasts"
        ]
      },
      "delete": {
        "operationId": "PodcastController_deletePodcast",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID du podcast",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Podcast supprimé"
          },
          "403": {
            "description": "Vous ne pouvez pas supprimer ce podcast"
          },
          "404": {
            "description": "Podcast non trouvé"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Supprimer un podcast",
        "tags": [
          "Podcasts"
        ]
      }
    },
    "/api/podcasts/publisher/{publisherId}": {
      "get": {
        "operationId": "PodcastController_getPodcastsByPublisher",
        "parameters": [
          {
            "name": "publisherId",
            "required": true,
            "in": "path",
            "description": "ID du publisher",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des podcasts du publisher",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PodcastResponseDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Récupérer les podcasts d'un publisher",
        "tags": [
          "Podcasts"
        ]
      }
    },
    "/api/users": {
      "get": {
        "operationId": "UsersController_getAllUsers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Liste des utilisateurs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponseDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Récupérer tous les utilisateurs",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "UsersController_getUserById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de l'utilisateur",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Détails de l'utilisateur",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur non trouvé"
          }
        },
        "summary": "Récupérer un utilisateur par son ID",
        "tags": [
          "Users"
        ]
      },
      "put": {
        "operationId": "UsersController_updateUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de l'utilisateur",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Utilisateur mis à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur non trouvé"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Mettre à jour un utilisateur",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "operationId": "UsersController_deleteUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de l'utilisateur",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Utilisateur supprimé"
          },
          "404": {
            "description": "Utilisateur non trouvé"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Supprimer un utilisateur",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/users/{id}/make-publisher": {
      "put": {
        "operationId": "UsersController_makePublisher",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de l'utilisateur",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Utilisateur promu en publisher",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Utilisateur non trouvé"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Promouvoir un utilisateur en publisher",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/lessons": {
      "get": {
        "operationId": "LessonsController_getAllLessons",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des leçons",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LessonResponseDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Obtenir toutes les leçons publiées",
        "tags": [
          "Lessons"
        ]
      },
      "post": {
        "operationId": "LessonsController_createLesson",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLessonDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Leçon créée"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Créer une nouvelle leçon (instructeur)",
        "tags": [
          "Lessons"
        ]
      }
    },
    "/api/lessons/{id}": {
      "get": {
        "operationId": "LessonsController_getLessonById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de la leçon",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Détails de la leçon",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LessonResponseDto"
                }
              }
            }
          }
        },
        "summary": "Obtenir une leçon par ID",
        "tags": [
          "Lessons"
        ]
      },
      "put": {
        "operationId": "LessonsController_updateLesson",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de la leçon",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateLessonDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Leçon mise à jour"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Mettre à jour une leçon",
        "tags": [
          "Lessons"
        ]
      },
      "delete": {
        "operationId": "LessonsController_deleteLesson",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de la leçon",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Leçon supprimée"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Supprimer une leçon",
        "tags": [
          "Lessons"
        ]
      }
    },
    "/api/lessons/my/created": {
      "get": {
        "operationId": "LessonsController_getMyLessons",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Liste des leçons créées"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtenir mes leçons créées",
        "tags": [
          "Lessons"
        ]
      }
    },
    "/api/lessons/{id}/publish": {
      "post": {
        "operationId": "LessonsController_publishLesson",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "ID de la leçon",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Leçon publiée"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Publier une leçon",
        "tags": [
          "Lessons"
        ]
      }
    },
    "/api/lessons/{lessonId}/modules": {
      "post": {
        "operationId": "LessonsController_createModule",
        "parameters": [
          {
            "name": "lessonId",
            "required": true,
            "in": "path",
            "description": "ID de la leçon",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateModuleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Module créé"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Ajouter un module à une leçon",
        "tags": [
          "Lessons"
        ]
      }
    },
    "/api/lessons/modules/{moduleId}/contents": {
      "post": {
        "operationId": "LessonsController_createContent",
        "parameters": [
          {
            "name": "moduleId",
            "required": true,
            "in": "path",
            "description": "ID du module",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contenu créé"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Ajouter du contenu à un module",
        "tags": [
          "Lessons"
        ]
      }
    },
    "/api/lessons/contents/{contentId}": {
      "get": {
        "operationId": "LessonsController_getContent",
        "parameters": [
          {
            "name": "contentId",
            "required": true,
            "in": "path",
            "description": "ID du contenu",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contenu"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtenir un contenu spécifique",
        "tags": [
          "Lessons"
        ]
      }
    },
    "/api/lessons/enroll": {
      "post": {
        "operationId": "LessonsController_enrollLesson",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnrollLessonDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Inscription réussie"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "S'inscrire à une leçon",
        "tags": [
          "Lessons"
        ]
      }
    },
    "/api/lessons/my/enrollments": {
      "get": {
        "operationId": "LessonsController_getMyEnrollments",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Liste des inscriptions"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtenir mes inscriptions",
        "tags": [
          "Lessons"
        ]
      }
    },
    "/api/lessons/progress": {
      "post": {
        "operationId": "LessonsController_updateProgress",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProgressDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Progression mise à jour"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Mettre à jour la progression",
        "tags": [
          "Lessons"
        ]
      }
    },
    "/api/lessons/{lessonId}/progress": {
      "get": {
        "operationId": "LessonsController_getLessonProgress",
        "parameters": [
          {
            "name": "lessonId",
            "required": true,
            "in": "path",
            "description": "ID de la leçon",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Progression"
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtenir la progression dans une leçon",
        "tags": [
          "Lessons"
        ]
      }
    },
    "/api/blog/posts": {
      "get": {
        "operationId": "BlogController_getAllPosts",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Obtenir tous les articles publiés",
        "tags": [
          "Blog"
        ]
      },
      "post": {
        "operationId": "BlogController_createPost",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Créer un article",
        "tags": [
          "Blog"
        ]
      }
    },
    "/api/blog/posts/popular": {
      "get": {
        "operationId": "BlogController_getPopularPosts",
        "parameters": [
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Obtenir les articles populaires",
        "tags": [
          "Blog"
        ]
      }
    },
    "/api/blog/posts/search": {
      "get": {
        "operationId": "BlogController_searchPosts",
        "parameters": [
          {
            "name": "q",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Rechercher des articles",
        "tags": [
          "Blog"
        ]
      }
    },
    "/api/blog/posts/category/{category}": {
      "get": {
        "operationId": "BlogController_getPostsByCategory",
        "parameters": [
          {
            "name": "category",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Obtenir les articles par catégorie",
        "tags": [
          "Blog"
        ]
      }
    },
    "/api/blog/posts/{slug}": {
      "get": {
        "operationId": "BlogController_getPostBySlug",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Obtenir un article par slug",
        "tags": [
          "Blog"
        ]
      }
    },
    "/api/blog/my/posts": {
      "get": {
        "operationId": "BlogController_getMyPosts",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtenir mes articles",
        "tags": [
          "Blog"
        ]
      }
    },
    "/api/blog/posts/{id}": {
      "put": {
        "operationId": "BlogController_updatePost",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePostDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Mettre à jour un article",
        "tags": [
          "Blog"
        ]
      },
      "delete": {
        "operationId": "BlogController_deletePost",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Supprimer un article",
        "tags": [
          "Blog"
        ]
      }
    },
    "/api/blog/posts/{id}/publish": {
      "post": {
        "operationId": "BlogController_publishPost",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Publier un article",
        "tags": [
          "Blog"
        ]
      }
    },
    "/api/blog/posts/{postId}/comments": {
      "post": {
        "operationId": "BlogController_addComment",
        "parameters": [
          {
            "name": "postId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Ajouter un commentaire",
        "tags": [
          "Blog"
        ]
      }
    },
    "/api/blog/comments/{id}": {
      "put": {
        "operationId": "BlogController_updateComment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Modifier un commentaire",
        "tags": [
          "Blog"
        ]
      },
      "delete": {
        "operationId": "BlogController_deleteComment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Supprimer un commentaire",
        "tags": [
          "Blog"
        ]
      }
    },
    "/api/blog/posts/{postId}/like": {
      "post": {
        "operationId": "BlogController_toggleLike",
        "parameters": [
          {
            "name": "postId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Liker/Unliker un article",
        "tags": [
          "Blog"
        ]
      }
    },
    "/api/jobs": {
      "get": {
        "operationId": "ApplicationsController_getAllJobPostings",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "jobType",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isRemote",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Obtenir toutes les offres ouvertes",
        "tags": [
          "Job Applications"
        ]
      },
      "post": {
        "operationId": "ApplicationsController_createJobPosting",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobPostingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Créer une offre d'emploi",
        "tags": [
          "Job Applications"
        ]
      }
    },
    "/api/jobs/search": {
      "get": {
        "operationId": "ApplicationsController_searchJobs",
        "parameters": [
          {
            "name": "q",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Rechercher des offres",
        "tags": [
          "Job Applications"
        ]
      }
    },
    "/api/jobs/{slug}": {
      "get": {
        "operationId": "ApplicationsController_getJobBySlug",
        "parameters": [
          {
            "name": "slug",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Obtenir une offre par slug",
        "tags": [
          "Job Applications"
        ]
      }
    },
    "/api/jobs/my/postings": {
      "get": {
        "operationId": "ApplicationsController_getMyJobPostings",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtenir mes offres postées",
        "tags": [
          "Job Applications"
        ]
      }
    },
    "/api/jobs/{id}": {
      "put": {
        "operationId": "ApplicationsController_updateJobPosting",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateJobPostingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Mettre à jour une offre",
        "tags": [
          "Job Applications"
        ]
      },
      "delete": {
        "operationId": "ApplicationsController_deleteJobPosting",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Supprimer une offre",
        "tags": [
          "Job Applications"
        ]
      }
    },
    "/api/jobs/{id}/publish": {
      "post": {
        "operationId": "ApplicationsController_publishJobPosting",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Publier une offre",
        "tags": [
          "Job Applications"
        ]
      }
    },
    "/api/jobs/{id}/close": {
      "post": {
        "operationId": "ApplicationsController_closeJobPosting",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Fermer une offre",
        "tags": [
          "Job Applications"
        ]
      }
    },
    "/api/jobs/{jobId}/apply": {
      "post": {
        "operationId": "ApplicationsController_applyToJob",
        "parameters": [
          {
            "name": "jobId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplicationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Postuler à une offre",
        "tags": [
          "Job Applications"
        ]
      }
    },
    "/api/jobs/my/applications": {
      "get": {
        "operationId": "ApplicationsController_getMyApplications",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtenir mes candidatures",
        "tags": [
          "Job Applications"
        ]
      }
    },
    "/api/jobs/{jobId}/applications": {
      "get": {
        "operationId": "ApplicationsController_getJobApplications",
        "parameters": [
          {
            "name": "jobId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtenir les candidatures d'une offre (recruteur)",
        "tags": [
          "Job Applications"
        ]
      }
    },
    "/api/jobs/applications/{id}/status": {
      "put": {
        "operationId": "ApplicationsController_updateApplicationStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApplicationStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Mettre à jour le statut d'une candidature (recruteur)",
        "tags": [
          "Job Applications"
        ]
      }
    },
    "/api/jobs/applications/{id}/withdraw": {
      "post": {
        "operationId": "ApplicationsController_withdrawApplication",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Retirer sa candidature",
        "tags": [
          "Job Applications"
        ]
      }
    },
    "/api/jobs/{jobId}/statistics": {
      "get": {
        "operationId": "ApplicationsController_getJobStatistics",
        "parameters": [
          {
            "name": "jobId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtenir les statistiques d'une offre (recruteur)",
        "tags": [
          "Job Applications"
        ]
      }
    },
    "/api/admin/dashboard": {
      "get": {
        "operationId": "AdminController_getDashboardStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtenir les statistiques du dashboard",
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/admin/users": {
      "get": {
        "operationId": "AdminController_getAllUsers",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtenir tous les utilisateurs",
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/admin/users/{id}": {
      "get": {
        "operationId": "AdminController_getUserById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtenir un utilisateur par ID",
        "tags": [
          "Admin"
        ]
      },
      "delete": {
        "operationId": "AdminController_deleteUser",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Supprimer un utilisateur",
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/admin/users/{id}/admin": {
      "put": {
        "operationId": "AdminController_makeUserAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Promouvoir/Rétrograder un utilisateur admin",
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/admin/users/{id}/publisher": {
      "put": {
        "operationId": "AdminController_updatePublisherStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePublisherStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Activer/Désactiver le statut publisher",
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/admin/applications": {
      "get": {
        "operationId": "AdminController_getAllApplications",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtenir toutes les candidatures",
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/admin/applications/{id}/approve": {
      "put": {
        "operationId": "AdminController_approveApplication",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveApplicationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Approuver/Modifier le statut d'une candidature",
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/admin/lessons": {
      "get": {
        "operationId": "AdminController_getAllLessons",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtenir toutes les leçons",
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/admin/lessons/{id}": {
      "delete": {
        "operationId": "AdminController_deleteLesson",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Supprimer une leçon",
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/admin/blog-posts": {
      "get": {
        "operationId": "AdminController_getAllBlogPosts",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Obtenir tous les articles de blog",
        "tags": [
          "Admin"
        ]
      }
    },
    "/api/admin/blog-posts/{id}": {
      "delete": {
        "operationId": "AdminController_deleteBlogPost",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "JWT-auth": []
          }
        ],
        "summary": "Supprimer un article de blog",
        "tags": [
          "Admin"
        ]
      }
    }
  },
  "info": {
    "title": "EduLearn API",
    "description": "API pour la plateforme EduLearn",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "SignupDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "john_doe",
            "description": "Nom d'utilisateur unique"
          },
          "email": {
            "type": "string",
            "example": "john@example.com",
            "description": "Adresse email valide"
          },
          "password": {
            "type": "string",
            "example": "Password123!",
            "description": "Mot de passe (minimum 6 caractères)",
            "minLength": 6
          }
        },
        "required": [
          "username",
          "email",
          "password"
        ]
      },
      "AuthResponseDto": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
            "description": "Token JWT"
          },
          "user": {
            "type": "object",
            "example": {
              "id": 1,
              "username": "john_doe",
              "email": "john@example.com",
              "avatar": "https://api.dicebear.com/7.x/avataaars/svg?seed=john",
              "isPublisher": false
            },
            "description": "Informations utilisateur"
          }
        },
        "required": [
          "access_token",
          "user"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@example.com",
            "description": "Adresse email"
          },
          "password": {
            "type": "string",
            "example": "Password123!",
            "description": "Mot de passe"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "SendGeneralMessageDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "example": "Bonjour à tous !",
            "description": "Contenu du message"
          }
        },
        "required": [
          "content"
        ]
      },
      "MessageResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "content": {
            "type": "string",
            "example": "Bonjour à tous !"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-10-25T12:00:00.000Z"
          },
          "sender": {
            "type": "object",
            "example": {
              "id": 1,
              "username": "john_doe",
              "avatar": "https://api.dicebear.com/7.x/avataaars/svg?seed=john"
            }
          }
        },
        "required": [
          "id",
          "content",
          "createdAt",
          "sender"
        ]
      },
      "SendDirectMessageDto": {
        "type": "object",
        "properties": {
          "recipientId": {
            "type": "number",
            "example": 2,
            "description": "ID du destinataire"
          },
          "content": {
            "type": "string",
            "example": "Salut, comment ça va ?",
            "description": "Contenu du message"
          }
        },
        "required": [
          "recipientId",
          "content"
        ]
      },
      "CreatePodcastDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Introduction à JavaScript",
            "description": "Titre du podcast"
          },
          "description": {
            "type": "string",
            "example": "Apprenez les bases de JavaScript en 30 minutes",
            "description": "Description du podcast"
          },
          "duration": {
            "type": "string",
            "example": "30 min",
            "description": "Durée du podcast"
          },
          "audioUrl": {
            "type": "string",
            "example": "https://example.com/podcasts/js-intro.mp3",
            "description": "URL du fichier audio"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://example.com/images/js-podcast.jpg",
            "description": "URL de l'image de couverture"
          }
        },
        "required": [
          "title",
          "description",
          "duration",
          "audioUrl"
        ]
      },
      "PodcastResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Introduction à JavaScript"
          },
          "description": {
            "type": "string",
            "example": "Apprenez les bases de JavaScript"
          },
          "duration": {
            "type": "string",
            "example": "30 min"
          },
          "audioUrl": {
            "type": "string",
            "example": "https://example.com/audio.mp3"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://example.com/image.jpg"
          },
          "views": {
            "type": "number",
            "example": 150
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-10-25T12:00:00.000Z"
          },
          "publisher": {
            "type": "object",
            "example": {
              "id": 1,
              "username": "john_doe",
              "email": "john@example.com"
            }
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "duration",
          "audioUrl",
          "imageUrl",
          "views",
          "createdAt",
          "publisher"
        ]
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "john_doe"
          },
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "avatar": {
            "type": "string",
            "example": "https://api.dicebear.com/7.x/avataaars/svg?seed=john"
          },
          "isPublisher": {
            "type": "boolean",
            "example": false
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2025-10-25T12:00:00.000Z"
          }
        },
        "required": [
          "id",
          "username",
          "email",
          "avatar",
          "isPublisher",
          "createdAt"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "john_doe_updated",
            "description": "Nouveau nom d'utilisateur"
          },
          "email": {
            "type": "string",
            "example": "newemail@example.com",
            "description": "Nouvelle adresse email"
          },
          "password": {
            "type": "string",
            "example": "NewPassword123!",
            "description": "Nouveau mot de passe"
          },
          "avatar": {
            "type": "string",
            "example": "https://api.dicebear.com/7.x/avataaars/svg?seed=newavatar",
            "description": "URL du nouvel avatar"
          },
          "isPublisher": {
            "type": "boolean",
            "example": true,
            "description": "Statut publisher"
          }
        }
      },
      "InstructorDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "username": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "username",
          "avatar"
        ]
      },
      "LessonResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "thumbnail": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "isFree": {
            "type": "boolean"
          },
          "level": {
            "type": "string",
            "enum": [
              "beginner",
              "intermediate",
              "advanced"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "published",
              "archived"
            ]
          },
          "duration": {
            "type": "number"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "enrollmentCount": {
            "type": "number"
          },
          "instructor": {
            "$ref": "#/components/schemas/InstructorDto"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "isEnrolled": {
            "type": "boolean"
          },
          "progress": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "thumbnail",
          "price",
          "isFree",
          "level",
          "status",
          "duration",
          "tags",
          "enrollmentCount",
          "instructor",
          "createdAt",
          "isEnrolled",
          "progress"
        ]
      },
      "CreateLessonDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Introduction à JavaScript"
          },
          "description": {
            "type": "string",
            "example": "Apprenez les bases de JavaScript"
          },
          "thumbnail": {
            "type": "string",
            "example": "https://example.com/thumbnail.jpg"
          },
          "price": {
            "type": "number",
            "example": 29.99
          },
          "isFree": {
            "type": "boolean",
            "example": false
          },
          "level": {
            "type": "string",
            "enum": [
              "beginner",
              "intermediate",
              "advanced"
            ],
            "example": "beginner"
          },
          "duration": {
            "type": "number",
            "example": 120
          },
          "tags": {
            "example": [
              "javascript",
              "programming"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "title",
          "description",
          "price",
          "isFree",
          "level",
          "duration"
        ]
      },
      "UpdateLessonDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Introduction à JavaScript"
          },
          "description": {
            "type": "string",
            "example": "Apprenez les bases de JavaScript"
          },
          "thumbnail": {
            "type": "string",
            "example": "https://example.com/thumbnail.jpg"
          },
          "price": {
            "type": "number",
            "example": 29.99
          },
          "isFree": {
            "type": "boolean",
            "example": false
          },
          "level": {
            "type": "string",
            "enum": [
              "beginner",
              "intermediate",
              "advanced"
            ],
            "example": "beginner"
          },
          "duration": {
            "type": "number",
            "example": 120
          },
          "tags": {
            "example": [
              "javascript",
              "programming"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateModuleDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Module 1: Les bases"
          },
          "description": {
            "type": "string",
            "example": "Introduction aux concepts de base"
          },
          "order": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "title",
          "order"
        ]
      },
      "CreateContentDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Introduction"
          },
          "type": {
            "type": "string",
            "enum": [
              "video",
              "text",
              "quiz",
              "document"
            ],
            "example": "video"
          },
          "content": {
            "type": "string",
            "example": "https://example.com/video.mp4"
          },
          "duration": {
            "type": "number",
            "example": 15
          },
          "order": {
            "type": "number",
            "example": 1
          },
          "isFreePreview": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "title",
          "type",
          "content",
          "duration",
          "order",
          "isFreePreview"
        ]
      },
      "EnrollLessonDto": {
        "type": "object",
        "properties": {
          "lessonId": {
            "type": "number",
            "example": 1
          },
          "paymentMethod": {
            "type": "string",
            "enum": [
              "stripe",
              "paypal",
              "mobile_money",
              "bank_transfer"
            ],
            "example": "stripe"
          }
        },
        "required": [
          "lessonId",
          "paymentMethod"
        ]
      },
      "UpdateProgressDto": {
        "type": "object",
        "properties": {
          "contentId": {
            "type": "number",
            "example": 1
          },
          "isCompleted": {
            "type": "boolean",
            "example": true
          },
          "timeSpent": {
            "type": "number",
            "example": 120
          }
        },
        "required": [
          "contentId",
          "isCompleted",
          "timeSpent"
        ]
      },
      "CreatePostDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Introduction à TypeScript"
          },
          "excerpt": {
            "type": "string",
            "example": "Un aperçu rapide de TypeScript"
          },
          "content": {
            "type": "string",
            "example": "Contenu complet du post..."
          },
          "featuredImage": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "technology",
              "design",
              "business",
              "marketing",
              "programming",
              "tutorial",
              "news",
              "other"
            ],
            "example": "programming"
          },
          "tags": {
            "example": [
              "typescript",
              "javascript"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "commentsEnabled": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "title",
          "excerpt",
          "content",
          "category",
          "commentsEnabled"
        ]
      },
      "UpdatePostDto": {
        "type": "object",
        "properties": {}
      },
      "CreateCommentDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "example": "Super article !"
          },
          "parentId": {
            "type": "number",
            "example": 1
          }
        },
        "required": [
          "content"
        ]
      },
      "CreateJobPostingDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Développeur Full Stack"
          },
          "description": {
            "type": "string",
            "example": "Nous recherchons un développeur..."
          },
          "requirements": {
            "type": "string",
            "example": "Maîtrise de React, Node.js..."
          },
          "responsibilities": {
            "type": "string"
          },
          "benefits": {
            "type": "string"
          },
          "company": {
            "type": "string",
            "example": "Tech Corp"
          },
          "companyLogo": {
            "type": "string"
          },
          "location": {
            "type": "string",
            "example": "Paris, France"
          },
          "isRemote": {
            "type": "boolean",
            "example": true
          },
          "jobType": {
            "type": "string",
            "enum": [
              "full_time",
              "part_time",
              "contract",
              "internship",
              "freelance"
            ],
            "example": "full_time"
          },
          "experienceLevel": {
            "type": "string",
            "enum": [
              "entry",
              "junior",
              "mid",
              "senior",
              "lead"
            ],
            "example": "mid"
          },
          "salaryMin": {
            "type": "number",
            "example": 40000
          },
          "salaryMax": {
            "type": "number",
            "example": 60000
          },
          "salaryCurrency": {
            "type": "string",
            "example": "EUR"
          },
          "skills": {
            "example": [
              "React",
              "Node.js",
              "TypeScript"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deadline": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "open",
              "closed",
              "archived"
            ],
            "example": "open",
            "default": "open",
            "description": "Statut de l'offre (par défaut: OPEN)"
          }
        },
        "required": [
          "title",
          "description",
          "requirements",
          "company",
          "location",
          "isRemote",
          "jobType",
          "experienceLevel"
        ]
      },
      "UpdateJobPostingDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "open",
              "closed",
              "archived"
            ],
            "description": "Statut de l'offre"
          }
        }
      },
      "CreateApplicationDto": {
        "type": "object",
        "properties": {
          "coverLetter": {
            "type": "string",
            "example": "Je suis très intéressé par ce poste..."
          },
          "resumeUrl": {
            "type": "string",
            "example": "https://example.com/resume.pdf"
          },
          "portfolioUrl": {
            "type": "string",
            "example": "https://portfolio.com"
          },
          "phone": {
            "type": "string",
            "example": "+33612345678"
          },
          "linkedinUrl": {
            "type": "string",
            "example": "https://linkedin.com/in/..."
          },
          "githubUrl": {
            "type": "string",
            "example": "https://github.com/..."
          }
        },
        "required": [
          "coverLetter"
        ]
      },
      "UpdateApplicationStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "reviewing",
              "shortlisted",
              "interview",
              "accepted",
              "rejected",
              "withdrawn"
            ]
          },
          "notes": {
            "type": "string"
          },
          "feedback": {
            "type": "string"
          }
        },
        "required": [
          "status"
        ]
      },
      "UpdateUserRoleDto": {
        "type": "object",
        "properties": {
          "isAdmin": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "isAdmin"
        ]
      },
      "UpdatePublisherStatusDto": {
        "type": "object",
        "properties": {
          "isPublisher": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "isPublisher"
        ]
      },
      "ApproveApplicationDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "reviewing",
              "shortlisted",
              "interview",
              "accepted",
              "rejected",
              "withdrawn"
            ]
          },
          "feedback": {
            "type": "string"
          }
        },
        "required": [
          "status"
        ]
      }
    }
  }
}